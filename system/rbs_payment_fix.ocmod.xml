<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>rbs_payment_fix</name>
    <code>rbs_payment_fix</code>
    <description>RBS Payment Fix</description>
    <version>1.0.0</version>
    <author>PRO Hamster</author>
    <link>http://prohamster.com</link>

    <file path="catalog/controller/extension/payment/rbs.php">

        <operation error="skip">
            <search><![CDATA[$product_taxSum = $this->tax->getTax($product['price'], $product['tax_class_id']);]]></search>
            <add position="before"><![CDATA[
                /* RECALCULATE DISCOUNT FROM TOTAL START */
                if ($product['price'] !== ($product['total'] * $product['quantity'])) {
                    $product['price'] = $product['total'] / $product['quantity'];
                    $product['price'] = round($product['price'], 2);
                    $product['total'] = round($product['price'] * $product['quantity'], 2);
                }
                /* RECALCULATE DISCOUNT FROM TOTAL END */

                /* PRODUCT COUPON START */
                if (isset($this->session->data['coupon'])) {
                    $this->load->model('extension/total/coupon');
                    $couponInfo = $this->model_extension_total_coupon
                        ->getCoupon($this->session->data['coupon']);

                    if ($couponInfo) {
                        if (!$couponInfo['product']) {
                            $couponStatus = true;
                        } else {
                            $couponStatus = in_array($product['product_id'], $couponInfo['product']);
                        }

                        if ($couponStatus) {
                            if ($couponInfo['type'] == 'F') {
                                // TODO
                            } elseif ($couponInfo['type'] == 'P') {
                                $product['price'] = $product['price'] - ($product['price'] / 100 * $couponInfo['discount']);
                                $product['price'] = round($product['price'], 2);
                                $product['total'] = round($product['price'] * $product['quantity'], 2);
                            }
                        }
                    }
                }
                /* PRODUCT COUPON END */
            ]]></add>
        </operation>

        <operation error="skip">
            <search><![CDATA[foreach ($this->cart->getProducts() as $product) {]]></search>
            <add position="after"><![CDATA[
                /* EXTRA NAME START */
                try {
                    $this->load->model('catalog/product');
                    $this->load->model('extension/module/melle');

                    $productInfo = $this->model_catalog_product->getProduct($product['product_id']);
                    $itemCode = isset($productInfo['name']) ? $productInfo['name'] : '';

                    $productOptions = '';
                    if (isset($product['option']) && is_array($product['option'])) {
                        foreach ($product['option'] as $optionData) {
                            if (isset($optionData['name']) && isset($optionData['value'])) {
                                $productOptions .= "{$optionData['name']}: {$optionData['value']} ";
                            }
                        }
                    }

                    $closestCategoryType = $this->model_extension_module_melle
                        ->getClosestCategoryTypeForProduct($product['product_id']);

                    $name = implode(' ', [$closestCategoryType, $productOptions]);

                    if ($name) {
                        $product['name'] = $name;
                    }

                } catch (\Exception $e) {
                    $this->log->write(":: RBS :: {$e->getMessage()}");
                }
                /* EXTRA NAME START */
            ]]></add>
        </operation>

        <operation error="skip">
            <search><![CDATA[$orderBundle['cartItems']['items'][] = $product_data;]]></search>
            <add position="before"><![CDATA[
                /* ITEM CODE START */
                if (isset($itemCode) && $itemCode) {
                    $product_data['itemCode'] = "{$itemCode}_{$product['cart_id']}";
                }
                /* ITEM CODE END */
            ]]></add>
        </operation>

        <operation error="skip">
            <search><![CDATA[$response = $this->rbs->register_order]]></search>
            <add position="before"><![CDATA[
                /* RECALCULATE TOTAL BUNDLE ITEMS START */
                $bundleAmount = 0;
                foreach ($orderBundle['cartItems']['items'] as $bunbleCartItem) {
                    $bundleAmount += $bunbleCartItem['itemAmount'];
                }

                if (($bundleAmount - $amount) > 1) {
                    $this->log->write(":: RBS :: `amount` => {$amount}  `bundleAmount` => {$bundleAmount}");
                }

                $amount = $bundleAmount;
                /* RECALCULATE TOTAL BUNDLE ITEMS END */
            ]]></add>
        </operation>

        <operation error="skip">
            <search><![CDATA[$product_data = array(]]></search>
            <add position="before"><![CDATA[
                /* FIX TAX TYPE START */
                $tax_type = $this->config->get('payment_rbs_taxType');
                /* FIX TAX TYPE END */
            ]]></add>
        </operation>

        <operation error="skip">
            <search><![CDATA[$orderBundle['cartItems']['items'][] = $delivery;]]></search>
            <add position="before"><![CDATA[
                /* FIX TAX TYPE START */
                $delivery['name'] = 'доставка';
                /* FIX TAX TYPE END */
            ]]></add>
        </operation>

    </file>

</modification>
