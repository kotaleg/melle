<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>melle_login_catalog</name>
    <code>melle_login_catalog</code>
    <description>Melle Login [Catalog]</description>
    <version>1.0.0</version>
    <author>PRO Hamster</author>
    <link>http://prohamster.com</link>

    <file path="catalog/controller/account/login.php">
        <operation error="skip">
            <search><![CDATA[protected function validate() {]]></search>
            <add position="before"><![CDATA[
                /* IVAN MOD START */
                public function melle_login()
                {
                    $this->load->model('account/customer');
                    $this->load->model('extension/pro_patch/url');
                    $this->load->model('extension/pro_patch/user');
                    $this->load->model('extension/pro_patch/json');

                    $this->load->language('account/login');

                    $json['redirect'] = false;
                    $parsed = $this->model_extension_pro_patch_json->parseJson(file_get_contents('php://input'));

                    // Login override for admin users
                    if (!empty($this->request->get['token'])) {
                        $this->customer->logout();
                        $this->cart->clear();

                        unset($this->session->data['order_id']);
                        unset($this->session->data['payment_address']);
                        unset($this->session->data['payment_method']);
                        unset($this->session->data['payment_methods']);
                        unset($this->session->data['shipping_address']);
                        unset($this->session->data['shipping_method']);
                        unset($this->session->data['shipping_methods']);
                        unset($this->session->data['comment']);
                        unset($this->session->data['coupon']);
                        unset($this->session->data['reward']);
                        unset($this->session->data['voucher']);
                        unset($this->session->data['vouchers']);

                        $customer_info = $this->model_account_customer->getCustomerByToken($this->request->get['token']);

                        if ($customer_info && $this->customer->login($customer_info['email'], '', true)) {
                            // Default Addresses
                            $this->load->model('account/address');

                            if ($this->config->get('config_tax_customer') == 'payment') {
                                $this->session->data['payment_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                            }

                            if ($this->config->get('config_tax_customer') == 'shipping') {
                                $this->session->data['shipping_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                            }

                            $json['redirect'] = $this->model_extension_pro_patch_url->ajax('account/account', '', true);
                            $json['isNewsletter'] = (isset($customer_info['newsletter']) && $customer_info['newsletter']) ? true : false;
                        }
                    }

                    if ($json['redirect'] === false && $this->customer->isLogged()) {
                        $json['redirect'] = $this->model_extension_pro_patch_url->ajax('account/account', '', true);
                    }

                    if ($json['redirect'] === false) {
                        if (isset($parsed['email']) && isset($parsed['password'])) {
                            $this->request->post['email'] = $parsed['email'];
                            $this->request->post['password'] = $parsed['password'];

                            if ($this->validate()) {
                                // Unset guest
                                unset($this->session->data['guest']);

                                // Default Shipping Address
                                $this->load->model('account/address');

                                if ($this->config->get('config_tax_customer') == 'payment') {
                                    $this->session->data['payment_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                                }

                                if ($this->config->get('config_tax_customer') == 'shipping') {
                                    $this->session->data['shipping_address'] = $this->model_account_address->getAddress($this->customer->getAddressId());
                                }

                                // Wishlist
                                if (isset($this->session->data['wishlist']) && is_array($this->session->data['wishlist'])) {
                                    $this->load->model('account/wishlist');

                                    foreach ($this->session->data['wishlist'] as $key => $product_id) {
                                        $this->model_account_wishlist->addWishlist($product_id);
                                        unset($this->session->data['wishlist'][$key]);
                                    }
                                }

                                $json['redirect'] = $this->model_extension_pro_patch_url->ajax('account/account', '', true);
                            } else {
                                if (is_array($this->error)) {
                                    foreach ($this->error as $k => $err) {
                                        $json['error'][] = $err;
                                    }
                                }
                            }

                            unset($this->request->post['email'], $this->request->post['password']);

                        } else {
                            $json['error'][] = $this->language->get('error_no_fields');
                        }
                    }

                    $this->response->setOutput(json_encode($json));
                }
                /* IVAN MOD END */
            ]]></add>
        </operation>
    </file>

</modification>
