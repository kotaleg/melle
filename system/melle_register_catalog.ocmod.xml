<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>melle_register_catalog</name>
    <code>melle_register_catalog</code>
    <description>Melle Register [Catalog]</description>
    <version>1.0.0</version>
    <author>PRO Hamster</author>
    <link>http://prohamster.com</link>

    <file path="catalog/controller/account/register.php">
        <operation error="skip">
            <search><![CDATA[private function validate() {]]></search>
            <add position="before"><![CDATA[
                /* IVAN MOD START */
                public function melle_register()
                {
                    $this->load->model('account/customer');
                    $this->load->model('extension/pro_patch/url');
                    $this->load->model('extension/pro_patch/user');
                    $this->load->model('extension/pro_patch/json');

                    $this->load->language('account/register');

                    $json['redirect'] = false;
                    $parsed = $this->model_extension_pro_patch_json->parseJson(file_get_contents('php://input'));

                    if ($this->customer->isLogged()) {
                        $json['redirect'] = $this->model_extension_pro_patch_url->ajax('account/account', '', true);
                    }

                    if (isset($parsed['form']) && is_array($parsed['form'])) {

                        if ((utf8_strlen($parsed['form']['name']) < 1) || (utf8_strlen($parsed['form']['name']) > 32)) {
                            $json['form_error']['name'] = $this->language->get('error_firstname');
                        }

                        if ((utf8_strlen($parsed['form']['email']) > 96) || !filter_var($parsed['form']['email'], FILTER_VALIDATE_EMAIL)) {
                            $json['form_error']['email'] = $this->language->get('error_email');
                        }

                        if ($this->model_account_customer->getTotalCustomersByEmail($parsed['form']['email'])) {
                            $json['form_error']['email'] = $this->language->get('error_exists');
                        }

                        if ((utf8_strlen($parsed['form']['phone']) < 3) || (utf8_strlen($parsed['form']['phone']) > 32)) {
                            $json['form_error']['phone'] = $this->language->get('error_telephone');
                        }

                        if ((utf8_strlen(html_entity_decode($parsed['form']['password'], ENT_QUOTES, 'UTF-8')) < 4)
                        || (utf8_strlen(html_entity_decode($parsed['form']['password'], ENT_QUOTES, 'UTF-8')) > 40)) {
                            $json['form_error']['password'] = $this->language->get('error_password');
                        }

                        if ($parsed['form']['confirm'] != $parsed['form']['password']) {
                            $json['form_error']['confirm'] = $this->language->get('error_confirm');
                        }

                        // Agree to terms
                        if ($this->config->get('config_account_id')) {
                            $this->load->model('catalog/information');

                            $information_info = $this->model_catalog_information->getInformation($this->config->get('config_account_id'));

                            if ($information_info && $parsed['form']['agree'] !== true) {
                                $json['form_error']['agree'] = sprintf($this->language->get('error_agree'), $information_info['title']);
                            }
                        }


                        if (!isset($json['form_error'])) {

                            $ex = explode(" ", trim($parsed['form']['name']));
                            if (count($ex) > 1) {
                                $firstname = array_shift($ex);
                                $lastname = implode(" ", $ex);
                            } else {
                                $firstname = $parsed['form']['name'];
                                $lastname = '--';
                            }

                            $customer_id = $this->model_account_customer->addCustomer(array(
                                'firstname' => $firstname,
                                'lastname' => $lastname,
                                'email' => $parsed['form']['email'],
                                'telephone' => $parsed['form']['phone'],
                                'password' => $parsed['form']['password'],
                                'newsletter' => $parsed['form']['newsletter'],
                                'birth' => $parsed['form']['birth'],
                                'discount_card' => $parsed['form']['discount_card'],
                            ));

                            // Clear any previous login attempts for unregistered accounts.
                            $this->model_account_customer->deleteLoginAttempts($parsed['form']['email']);
                            $this->customer->login($parsed['form']['email'], $parsed['form']['password']);
                            unset($this->session->data['guest']);

                            $json['redirect'] = $this->model_extension_pro_patch_url->ajax('account/success', '', true);
                        }
                    }

                    $this->response->setOutput(json_encode($json));
                }
                /* IVAN MOD END */
            ]]></add>
        </operation>
    </file>

    <file path="catalog/model/account/customer.php">
        <operation error="skip">
            <search><![CDATA[, date_added = NOW()");]]></search>
            <add position="replace"><![CDATA[, `discount_card` = '" . $this->db->escape(isset($data['discount_card']) ? $data['discount_card'] : '') . "', `birth` = '" . $this->db->escape(isset($data['birth']) ? $data['birth'] : '') . "', date_added = NOW()");]]></add>
        </operation>
    </file>

    <file path="catalog/model/account/customer.php">
        <operation error="skip">
            <search><![CDATA[json_encode($data['custom_field']['account']) : '') . "' WHERE customer_id = '" . (int)$customer_id . "'");]]></search>
            <add position="replace"><![CDATA[json_encode($data['custom_field']['account']) : '') . "', `discount_card` = '" . $this->db->escape(isset($data['discount_card']) ? $data['discount_card'] : '') . "', `birth` = '" . $this->db->escape(isset($data['birth']) ? $data['birth'] : '') . "' WHERE customer_id = '" . (int)$customer_id . "'");]]></add>
        </operation>
    </file>

</modification>