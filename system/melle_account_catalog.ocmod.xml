<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>melle_account_catalog</name>
    <code>melle_account_catalog</code>
    <description>Melle Account [Catalog]</description>
    <version>1.0.0</version>
    <author>PRO Hamster</author>
    <link>http://prohamster.com</link>

    <file path="catalog/controller/account/account.php">
        <operation error="skip">
            <search><![CDATA[$this->load->model('account/customer');]]></search>
            <add position="after"><![CDATA[
                /* IVAN MOD START */
                $this->load->controller('extension/module/melle/initAccount');
                /* IVAN MOD END */
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/account/edit.php">
        <operation error="skip">
            <search><![CDATA[protected function validate() {]]></search>
            <add position="before"><![CDATA[
            /* IVAN MOD START */
            public function melle_edit()
            {
                $this->load->model('account/customer');
                $this->load->model('extension/pro_patch/url');
                $this->load->model('extension/pro_patch/user');
                $this->load->model('extension/pro_patch/json');

                $this->load->language('account/register');
                $this->load->language('account/edit');

                $json['redirect'] = false;
                $parsed = $this->model_extension_pro_patch_json->parseJson(file_get_contents('php://input'));

                if (!$this->customer->isLogged()) {
                    $json['redirect'] = $this->model_extension_pro_patch_url->ajax('account/account', '', true);
                }

                if (isset($parsed['form']) && is_array($parsed['form'])) {

                    if ((utf8_strlen($parsed['form']['name']) < 1) || (utf8_strlen($parsed['form']['name']) > 32)) {
                        $json['form_error']['name'] = $this->language->get('error_firstname');
                    }

                    if ((utf8_strlen($parsed['form']['email']) > 96) || !filter_var($parsed['form']['email'], FILTER_VALIDATE_EMAIL)) {
                        $json['form_error']['email'] = $this->language->get('error_email');
                    }

                    if (($this->customer->getEmail() != $parsed['form']['email'])
                    && $this->model_account_customer->getTotalCustomersByEmail($parsed['form']['email'])) {
                        $json['form_error']['email'] = $this->language->get('error_exists');
                    }

                    if ((utf8_strlen($parsed['form']['phone']) < 3) || (utf8_strlen($parsed['form']['phone']) > 32)) {
                        $json['form_error']['phone'] = $this->language->get('error_telephone');
                    }

                    // CHANGE PASSWORD VALIDATION
                    if (isset($parsed['form']['password']) && !empty($parsed['form']['password'])) {
                        if ((utf8_strlen(html_entity_decode($parsed['form']['password'], ENT_QUOTES, 'UTF-8')) < 4)
                        || (utf8_strlen(html_entity_decode($parsed['form']['password'], ENT_QUOTES, 'UTF-8')) > 40)) {
                            $json['form_error']['password'] = $this->language->get('error_password');
                        }

                        if ($parsed['form']['confirm'] != $parsed['form']['password']) {
                            $json['form_error']['confirm'] = $this->language->get('error_confirm');
                        }
                    }

                    if (!isset($json['form_error'])) {

                        $ex = explode(" ", trim($parsed['form']['name']));
                        if (count($ex) > 1) {
                            $firstname = array_shift($ex);
                            $lastname = implode(" ", $ex);
                        } else {
                            $firstname = $parsed['form']['name'];
                            $lastname = '--';
                        }

                        $this->model_account_customer->editCustomer($this->customer->getId(), array(
                            'firstname' => $firstname,
                            'lastname' => $lastname,
                            'email' => $parsed['form']['email'],
                            'telephone' => filter_var($parsed['form']['phone'], FILTER_SANITIZE_NUMBER_INT),
                            'birth' => $parsed['form']['birth'],
                            'discount_card' => $parsed['form']['discount_card'],
                        ));

                        $this->model_account_customer->editNewsletter($parsed['form']['newsletter']);

                        $json['success'][] = $this->language->get('text_success');

                        // CHANGE PASSWORD
                        if (isset($parsed['form']['password']) && !empty($parsed['form']['password'])) {
                            $this->model_account_customer->editPassword($this->customer->getEmail(), $parsed['form']['password']);

                            $this->load->language('account/password');
                            $json['success'][] = $this->language->get('text_success');
                        }
                    }
                }

                $this->response->setOutput(json_encode($json));
            }
            /* IVAN MOD END */
            ]]></add>
        </operation>
    </file>

</modification>